package com.xgame.config.RtsType;
import com.xgame.config.BaseFilePri;
import com.alibaba.fastjson.JSON;

/** 
 * @author configTool
 * 
 * @version 1.0.0
 * @date 2017-03-22 21:10:47 
 */
public class RtsTypePir extends BaseFilePri{
	
	/**﻿战斗类型id*/
	int id;
	/**攻守类型(1：进攻方，2:防守方)*/
	int type;
	/**伤兵强制死亡比例(百分比，结果除100)（受伤的兵种直接判断死亡的比例，剩余的受伤兵种返回修理厂,受到修理厂容量的限制，超过修理厂容量的部分，判断死亡）*/
	int death_rate;
	/**伤兵直接返回军营的比例(百分比，结果除100)（受伤的兵种直接放回军营的比例，剩余的受伤兵种返回修理厂,受到修理厂容量的限制，超过修理厂容量的部分，判断死亡）*/
	int hospital_rate;
	/**伤兵是否无视修理厂上限（受伤士兵全部返回修理厂，无视修理厂容量）*/
	int is_ignore_hospital_limit;
	
	
	
	/**﻿战斗类型id*/
	public int getId(){
		return id;
	}
	/**攻守类型(1：进攻方，2:防守方)*/
	public int getType(){
		return type;
	}
	/**伤兵强制死亡比例(百分比，结果除100)（受伤的兵种直接判断死亡的比例，剩余的受伤兵种返回修理厂,受到修理厂容量的限制，超过修理厂容量的部分，判断死亡）*/
	public int getDeath_rate(){
		return death_rate;
	}
	/**伤兵直接返回军营的比例(百分比，结果除100)（受伤的兵种直接放回军营的比例，剩余的受伤兵种返回修理厂,受到修理厂容量的限制，超过修理厂容量的部分，判断死亡）*/
	public int getHospital_rate(){
		return hospital_rate;
	}
	/**伤兵是否无视修理厂上限（受伤士兵全部返回修理厂，无视修理厂容量）*/
	public int getIs_ignore_hospital_limit(){
		return is_ignore_hospital_limit;
	}
	
	
	
	@Override
	public String toString(){
		return JSON.toJSONString(this);
	}
}